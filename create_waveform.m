function wave = create_waveform(param, t_array, dt)    
    
    if param.type == 'sinusoidal'
        
        txtime = ceil(1 / param.freq / dt); % #sampling per source wave cycle
        delay = txtime * param.wavenum_offset;    % #sampling during offset

        wave = param.magnitude * sin( 2*pi * param.freq * t_array);
        wave(1:delay)=0;
        wave(delay + txtime * param.wavenum + 1:end)=0;
        
        % Apply window function
        z=hanning(round(txtime/4)*2);
        wave=wave.*(...
            cat(...
                1, ...
                zeros(delay,1), ...
                z(1:length(z)/2), ...
                ones( txtime * param.wavenum-length(z),1),...
                z((length(z)/2+1):length(z)), ...
                zeros(length(t_array)-delay-txtime*param.wavenum,1)...
            )...
        ).';
        wave=real(...
            bpf(...
                wave.', ...
                0, ... lowcut freq
                2*param.freq, ... highcut freq
                1/dt ... sampling frequency
            ).' ...
        );
    else
        wave = zeros(length(t_array));
    end
    
end

